{"ast":null,"code":"import _slicedToArray from\"C:/Users/karth/OneDrive/Desktop/wolf/complete-register-login-system-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{BrowserRouter,NavLink,Route,Switch}from\"react-router-dom\";import Home from\"./Home\";import Register from\"./Register\";import Login from\"./Login\";import PremiumContent from\"./PremiumContent\";import PublicRoute from\"./routes/PublicRoute\";import PrivateRoute from\"./routes/PrivateRoute\";import React,{useState,useEffect}from\"react\";import{getUser,getToken,setUserSession,resetUserSession}from\"./service/AuthService\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var verifyTokenAPIURL='https://z1f0rbqvfd.execute-api.ap-south-1.amazonaws.com/prod/verify';function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isAuthenicating=_useState2[0],setAuthenicating=_useState2[1];useEffect(function(){var token=getToken();if(token==='undefined'||token===undefined||token===null||!token){return;}var requestConfig={headers:{'x-api-key':'naPFvphp8J1UY1rAPZ8gr2MSdH4tSn3a6fytDgpv'}};var requestBody={user:getUser(),token:token};axios.post(verifyTokenAPIURL,requestBody,requestConfig).then(function(response){setUserSession(response.data.user,response.data.token);setAuthenicating(false);}).catch(function(){resetUserSession();setAuthenicating(false);});},[]);var token=getToken();if(isAuthenicating&&token){return/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:\"Authenicating...\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(NavLink,{exact:true,activeClassName:\"active\",to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(NavLink,{activeClassName:\"active\",to:\"/register\",children:\"Register\"}),/*#__PURE__*/_jsx(NavLink,{activeClassName:\"active\",to:\"/login\",children:\"Login\"}),/*#__PURE__*/_jsx(NavLink,{activeClassName:\"active\",to:\"/premium-content\",children:\"Premium Content\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/_jsx(PublicRoute,{path:\"/register\",component:Register}),/*#__PURE__*/_jsx(PublicRoute,{path:\"/login\",component:Login}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/premium-content\",component:PremiumContent})]})})]})});}export default App;","map":{"version":3,"sources":["C:/Users/karth/OneDrive/Desktop/wolf/complete-register-login-system-frontend/src/App.js"],"names":["BrowserRouter","NavLink","Route","Switch","Home","Register","Login","PremiumContent","PublicRoute","PrivateRoute","React","useState","useEffect","getUser","getToken","setUserSession","resetUserSession","axios","verifyTokenAPIURL","App","isAuthenicating","setAuthenicating","token","undefined","requestConfig","headers","requestBody","user","post","then","response","data","catch"],"mappings":"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","sourcesContent":["import { BrowserRouter, NavLink, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport PremiumContent from \"./PremiumContent\";\r\nimport PublicRoute from \"./routes/PublicRoute\";\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getUser, getToken, setUserSession, resetUserSession } from \"./service/AuthService\";\r\nimport axios from \"axios\";\r\n\r\nconst verifyTokenAPIURL = 'https://z1f0rbqvfd.execute-api.ap-south-1.amazonaws.com/prod/verify';\r\n\r\nfunction App() {\r\n\r\n  const [isAuthenicating, setAuthenicating] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = getToken();\r\n    if (token === 'undefined' || token === undefined || token === null || !token) {\r\n      return;\r\n    }\r\n\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'naPFvphp8J1UY1rAPZ8gr2MSdH4tSn3a6fytDgpv'\r\n      }\r\n    }\r\n    const requestBody = {\r\n      user: getUser(),\r\n      token: token\r\n    }\r\n\r\n    axios.post(verifyTokenAPIURL, requestBody, requestConfig).then(response => {\r\n      setUserSession(response.data.user, response.data.token);\r\n      setAuthenicating(false);\r\n    }).catch(() => {\r\n      resetUserSession();\r\n      setAuthenicating(false);\r\n    })\r\n  }, []);\r\n\r\n  const token = getToken();\r\n  if (isAuthenicating && token) {\r\n    return <div className=\"content\">Authenicating...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n      <div className=\"header\">\r\n        <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/register\">Register</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/premium-content\">Premium Content</NavLink>\r\n      </div>\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <PublicRoute path=\"/register\" component={Register}/>\r\n          <PublicRoute path=\"/login\" component={Login}/>\r\n          <PrivateRoute path=\"/premium-content\" component={PremiumContent}/>\r\n        </Switch>\r\n      </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}