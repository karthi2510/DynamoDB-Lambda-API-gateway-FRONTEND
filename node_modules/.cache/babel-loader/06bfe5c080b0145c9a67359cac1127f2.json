{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\OneDrive\\\\Desktop\\\\wolf\\\\complete-register-login-system-frontend\\\\src\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerUrl = 'https://gzcxszjnze.execute-api.us-east-1.amazonaws.com/prod/register';\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n      setMessage('All fields are required');\n      return;\n    }\n\n    setMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'OkhIJdHFMomDeRVUXGfa1EXWiGBAWpdakg7ZRCFf'\n      }\n    };\n    const requestBody = {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    };\n    axios.post(registerUrl, requestBody, requestConfig).then(response => {\n      setMessage('Registeration Successful');\n    }).catch(error => {\n      if (error.response.status === 401) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('sorry....the backend server is down!! please try again later');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 98\n      }, this), \"email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 101\n      }, this), \"username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 110\n      }, this), \"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"Vv0mXgSrs9xULoWcTqBeqOy7cnA=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/karth/OneDrive/Desktop/wolf/complete-register-login-system-frontend/src/Register.js"],"names":["React","useState","axios","registerUrl","Register","name","setName","email","setEmail","username","setUsername","password","setPassword","message","setMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","catch","error","status","data","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst registerUrl = 'https://gzcxszjnze.execute-api.us-east-1.amazonaws.com/prod/register';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\r\n      setMessage('All fields are required');\r\n      return;\r\n    }\r\n    setMessage(null);\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'OkhIJdHFMomDeRVUXGfa1EXWiGBAWpdakg7ZRCFf'\r\n      }\r\n    }\r\n    const requestBody = {\r\n      username: username,\r\n      email: email,\r\n      name: name,\r\n      password: password\r\n    }\r\n    axios.post(registerUrl, requestBody, requestConfig).then(response => {\r\n      setMessage('Registeration Successful');\r\n    }).catch(error => {\r\n      if (error.response.status === 401) {\r\n        setMessage(error.response.data.message);\r\n      } else {\r\n        setMessage('sorry....the backend server is down!! please try again later');\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <h5>Register</h5>\r\n        name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /> <br/>\r\n        email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /> <br/>\r\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\r\n        password: <input type=\"text\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\r\n        <input type=\"submit\" value=\"Register\" />\r\n      </form>\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}